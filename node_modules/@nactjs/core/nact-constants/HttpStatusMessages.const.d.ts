declare const HTTP_STATUS_MESSAGES: {
    Continue: string;
    SwitchingProtocols: string;
    Processing: string;
    EarlyHints: string;
    OK: string;
    Created: string;
    Accepted: string;
    NonAuthoritativeInformation: string;
    NoContent: string;
    ResetContent: string;
    PartialContent: string;
    MultiStatus: string;
    AlreadyReported: string;
    IMUsed: string;
    MultipleChoices: string;
    MovedTemporarily: string;
    SeeOther: string;
    NotModified: string;
    UseProxy: string;
    TemporaryRedirect: string;
    BadRequest: string;
    Unauthorized: string;
    PaymentRequired: string;
    Forbidden: string;
    NotFound: string;
    MethodNotAllowed: string;
    NotAcceptable: string;
    ProxyAuthenticationRequired: string;
    RequestTimeout: string;
    Conflict: string;
    Gone: string;
    LengthRequired: string;
    PreconditionFailed: string;
    PayloadTooLarge: string;
    URITooLong: string;
    UnsupportedMediaType: string;
    RangeNotSatisfiable: string;
    ExpectationFailed: string;
    ImAteapot: string;
    AuthenticationTimeout: string;
    MisdirectedRequest: string;
    UnprocessableEntity: string;
    Locked: string;
    FailedDependency: string;
    TooEarly: string;
    UpgradeRequired: string;
    PreconditionRequired: string;
    TooManyRequests: string;
    RequestHeaderFieldsTooLarge: string;
    RequestedHostUnavailable: string;
    RetryWith: string;
    UnavailableForLegalReasons: string;
    ClientClosedRequest: string;
    InternalServerError: string;
    NotImplemented: string;
    BadGateway: string;
    ServiceUnavailable: string;
    GatewayTimeout: string;
    HTTPVersionNotSupported: string;
    VariantAlsoNegotiates: string;
    InsufficientStorage: string;
    LoopDetected: string;
    ResourceLimitReached: string;
    BandwidthLimitExceeded: string;
    NotExtended: string;
    NetworkAuthenticationRequired: string;
    UnknownError: string;
    WebServerIsDown: string;
    ConnectionTimedOut: string;
    OriginIsUnreachable: string;
    ATimeoutOccurred: string;
    SSLHandshakeFailed: string;
    InvalidSSLCertificate: string;
};
export { HTTP_STATUS_MESSAGES };
//# sourceMappingURL=HttpStatusMessages.const.d.ts.map