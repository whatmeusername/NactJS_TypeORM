"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Connect = exports.Patch = exports.Delete = exports.Put = exports.Option = exports.Trace = exports.Head = exports.Post = exports.Get = void 0;
const index_1 = require("../../index");
function createMethodDecorator(method, paths) {
    return function (target, propertyKey, descriptor) {
        let routesData = Reflect.getMetadata(index_1.ROUTE__PATHS, target.constructor, propertyKey);
        if (!routesData) {
            routesData = { [method]: { paths: paths, data: [], method: method } };
        }
        else {
            routesData[method] = { paths: paths, data: [], method: method };
        }
        Reflect.defineMetadata(index_1.ROUTE__PATHS, routesData, target.constructor, propertyKey);
        return descriptor;
    };
}
const Get = (...paths) => createMethodDecorator("GET", paths);
exports.Get = Get;
const Post = (...paths) => createMethodDecorator("POST", paths);
exports.Post = Post;
const Head = (...paths) => createMethodDecorator("Head", paths);
exports.Head = Head;
const Trace = (...paths) => createMethodDecorator("TRACE", paths);
exports.Trace = Trace;
const Option = (...paths) => createMethodDecorator("OPTION", paths);
exports.Option = Option;
const Put = (...paths) => createMethodDecorator("PUT", paths);
exports.Put = Put;
const Delete = (...paths) => createMethodDecorator("DELETE", paths);
exports.Delete = Delete;
const Patch = (...paths) => createMethodDecorator("PATCH", paths);
exports.Patch = Patch;
const Connect = (...paths) => createMethodDecorator("CONNECT", paths);
exports.Connect = Connect;
