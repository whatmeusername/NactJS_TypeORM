import { NactRequest, HTTPMethods } from "../index";
import type { PathWalkerParams, ChildRouteSchema, RouteChild, NactRouteConfig } from "./interface";
import { NactRouter } from "./NactRouteLibary";
declare function findRouteByParams(Router: NactRouter, lookfor: PathWalkerParams): RouteChild | null;
declare function diffRouteSchemas(Route: RouteChild, lookup: ChildRouteSchema | string[]): "pass" | "optional" | "fail";
declare function getRouteData(path: string | RegExp, method: HTTPMethods | string, propertyKey: string): RouteChild;
declare function getPathSchema(path: string): ChildRouteSchema;
declare function getRouteParameters(params: any[], req: NactRequest): any | null;
declare function getControllerPath(instance: any): string | null;
declare function getRouteConfig(target: any, descriptorKey?: string): NactRouteConfig | undefined;
declare function setRouteConfig(config: NactRouteConfig, target: any, descriptorKey?: string): void;
export { getPathSchema, getRouteParameters, findRouteByParams, diffRouteSchemas, getRouteData, getControllerPath, getRouteConfig, setRouteConfig, };
//# sourceMappingURL=utils.d.ts.map