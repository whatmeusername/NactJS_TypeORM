"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOrigin = exports.getRequestIP = exports.getHost = exports.getProtocol = exports.splitURLParameters = exports.getRequestURLInfo = void 0;
const tslib_1 = require("tslib");
const url_1 = tslib_1.__importDefault(require("url"));
const splitURLParameters = (string) => {
    if (string === "/") {
        return ["/"];
    }
    const splittedRes = string.split("/");
    return splittedRes.filter((param) => param !== "");
};
exports.splitURLParameters = splitURLParameters;
const getRequestURLInfo = (req) => {
    const fullUrl = getOrigin(req) + req.url;
    const parsedURLQuery = url_1.default.parse(fullUrl);
    const URL = {
        ...parsedURLQuery,
        query: new URLSearchParams(parsedURLQuery.search ?? ""),
        params: splitURLParameters(parsedURLQuery.pathname ?? "/"),
    };
    return URL;
};
exports.getRequestURLInfo = getRequestURLInfo;
const getOrigin = (req) => {
    return getProtocol(req) + "://" + (req.headers.host ?? "");
};
exports.getOrigin = getOrigin;
const getProtocol = (req) => {
    //@ts-ignore
    return req.socket.encrypted ? "https" : "http";
};
exports.getProtocol = getProtocol;
const getHost = (req) => {
    return (req.headers.host ?? req.headers.authority) ?? null;
};
exports.getHost = getHost;
const getRequestIP = (req) => {
    return req?.socket?.remoteAddress ?? null;
};
exports.getRequestIP = getRequestIP;
