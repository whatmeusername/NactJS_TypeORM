import type { NactRequest } from "../nact-request/request";
import { HttpExpection } from "./base-http-expection.expection";
declare abstract class HttpExpectionHandler {
    private acceptExpections;
    private acceptAny;
    constructor();
    private __getAcceptNames;
    canAccept(expection: HttpExpection | {
        new (...args: any): HttpExpection;
    }): boolean;
    accept(expection: HttpExpection, ctx: NactRequest): boolean;
    abstract catch(expection: HttpExpection, request: NactRequest): void;
}
declare function isExpectionObject(expection: any): expection is {
    statusCode: number;
    message: string;
};
declare class BaseHttpExpectionHandler extends HttpExpectionHandler {
    catch(expection: HttpExpection, ctx: NactRequest): boolean;
    handleUnknowException(expection: any, ctx: NactRequest): boolean;
}
export { HttpExpectionHandler, BaseHttpExpectionHandler, isExpectionObject };
//# sourceMappingURL=base-http-expection-handler.handler.d.ts.map